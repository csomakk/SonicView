<?xml version="1.0"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
                       xmlns:s="library://ns.adobe.com/flex/spark"
                       invoke="onInvoke(event)"
                       showStatusBar="false"
                       doubleClickEnabled="true"
                       doubleClick="onDoubleClick()"
                       windowComplete="onWindowComplete()"
                       backgroundColor="black"
                       title="SonicView - {imageLoader.lastLoadedImagePath} [{imageLoader.currentFileNumberOfDirectory + 1}/{imageLoader.currentDirectoryContentLength}]"
>
    <fx:Script><![CDATA[

        [Bindable]
        public var imageLoader:ImageLoader = new ImageLoader();
        public var fullScreenManager:FullScreenManager = new FullScreenManager();
        public var hotkeyManager:HotkeyManager = new HotkeyManager();

        private const backgrounds:Array = [0x0, 0xffffff, 0xff0000, 0xff00, 0xff];

        public function onDoubleClick():void {
            fullScreenManager.toggleFullScreen();
        }

        public function onWindowComplete():void {
            fullScreenManager.setStage(stage);
            hotkeyManager.listen(stage);
        }

        public function onInvoke(invokeEvent:InvokeEvent):void {
            if ((invokeEvent.currentDirectory != null) && (invokeEvent.arguments.length > 0)){
                imageLoader.loadImage(invokeEvent.arguments[0]);
            }
        }

        public function toggleBackground():void {
            var currentBackgroundId:int = backgrounds.indexOf(this.getStyle("backgroundColor"));
            this.setStyle("backgroundColor", backgrounds[(currentBackgroundId + 1) % backgrounds.length]);
        }

        public function toggleInfo():void {
            infoLabel.visible = !infoLabel.visible;
        }

        ]]></fx:Script>
    <s:Image
            source="{imageLoader.lastLoadedImageSource}"
            id="image"
            top="0"
            left="0"
            right="0"
            bottom="0"
    />
    <s:Label id="infoLabel"
             text="{imageLoader.lastLoadedImagePath} [{imageLoader.currentFileNumberOfDirectory + 1}/{imageLoader.currentDirectoryContentLength}]"
             color="green"
             bottom="0"
    />
</s:WindowedApplication>
